// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: plugnmeet_common_api.proto

package plugnmeet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwitchPresenterTask int32

const (
	SwitchPresenterTask_PROMOTE SwitchPresenterTask = 0
	SwitchPresenterTask_DEMOTE  SwitchPresenterTask = 1
)

// Enum value maps for SwitchPresenterTask.
var (
	SwitchPresenterTask_name = map[int32]string{
		0: "PROMOTE",
		1: "DEMOTE",
	}
	SwitchPresenterTask_value = map[string]int32{
		"PROMOTE": 0,
		"DEMOTE":  1,
	}
)

func (x SwitchPresenterTask) Enum() *SwitchPresenterTask {
	p := new(SwitchPresenterTask)
	*p = x
	return p
}

func (x SwitchPresenterTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwitchPresenterTask) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_common_api_proto_enumTypes[0].Descriptor()
}

func (SwitchPresenterTask) Type() protoreflect.EnumType {
	return &file_plugnmeet_common_api_proto_enumTypes[0]
}

func (x SwitchPresenterTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwitchPresenterTask.Descriptor instead.
func (SwitchPresenterTask) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{0}
}

type ExternalMediaPlayerTask int32

const (
	ExternalMediaPlayerTask_START_PLAYBACK ExternalMediaPlayerTask = 0
	ExternalMediaPlayerTask_END_PLAYBACK   ExternalMediaPlayerTask = 1
)

// Enum value maps for ExternalMediaPlayerTask.
var (
	ExternalMediaPlayerTask_name = map[int32]string{
		0: "START_PLAYBACK",
		1: "END_PLAYBACK",
	}
	ExternalMediaPlayerTask_value = map[string]int32{
		"START_PLAYBACK": 0,
		"END_PLAYBACK":   1,
	}
)

func (x ExternalMediaPlayerTask) Enum() *ExternalMediaPlayerTask {
	p := new(ExternalMediaPlayerTask)
	*p = x
	return p
}

func (x ExternalMediaPlayerTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalMediaPlayerTask) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_common_api_proto_enumTypes[1].Descriptor()
}

func (ExternalMediaPlayerTask) Type() protoreflect.EnumType {
	return &file_plugnmeet_common_api_proto_enumTypes[1]
}

func (x ExternalMediaPlayerTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalMediaPlayerTask.Descriptor instead.
func (ExternalMediaPlayerTask) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{1}
}

type ExternalDisplayLinkTask int32

const (
	ExternalDisplayLinkTask_START_EXTERNAL_LINK ExternalDisplayLinkTask = 0
	ExternalDisplayLinkTask_STOP_EXTERNAL_LINK  ExternalDisplayLinkTask = 1
)

// Enum value maps for ExternalDisplayLinkTask.
var (
	ExternalDisplayLinkTask_name = map[int32]string{
		0: "START_EXTERNAL_LINK",
		1: "STOP_EXTERNAL_LINK",
	}
	ExternalDisplayLinkTask_value = map[string]int32{
		"START_EXTERNAL_LINK": 0,
		"STOP_EXTERNAL_LINK":  1,
	}
)

func (x ExternalDisplayLinkTask) Enum() *ExternalDisplayLinkTask {
	p := new(ExternalDisplayLinkTask)
	*p = x
	return p
}

func (x ExternalDisplayLinkTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalDisplayLinkTask) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_common_api_proto_enumTypes[2].Descriptor()
}

func (ExternalDisplayLinkTask) Type() protoreflect.EnumType {
	return &file_plugnmeet_common_api_proto_enumTypes[2]
}

func (x ExternalDisplayLinkTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalDisplayLinkTask.Descriptor instead.
func (ExternalDisplayLinkTask) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{2}
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type VerifyTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsProduction *bool `protobuf:"varint,1,opt,name=is_production,json=isProduction,proto3,oneof" json:"is_production,omitempty"`
}

func (x *VerifyTokenReq) Reset() {
	*x = VerifyTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReq) ProtoMessage() {}

func (x *VerifyTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReq.ProtoReflect.Descriptor instead.
func (*VerifyTokenReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{1}
}

func (x *VerifyTokenReq) GetIsProduction() bool {
	if x != nil && x.IsProduction != nil {
		return *x.IsProduction
	}
	return false
}

type VerifyTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        bool    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	LivekitHost   *string `protobuf:"bytes,3,opt,name=livekit_host,json=livekitHost,proto3,oneof" json:"livekit_host,omitempty"`
	Token         *string `protobuf:"bytes,4,opt,name=token,proto3,oneof" json:"token,omitempty"`
	ServerVersion *string `protobuf:"bytes,5,opt,name=server_version,json=serverVersion,proto3,oneof" json:"server_version,omitempty"`
	EnabledE2Ee   bool    `protobuf:"varint,6,opt,name=enabled_e2ee,json=enabledE2ee,proto3" json:"enabled_e2ee,omitempty"`
}

func (x *VerifyTokenRes) Reset() {
	*x = VerifyTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenRes) ProtoMessage() {}

func (x *VerifyTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenRes.ProtoReflect.Descriptor instead.
func (*VerifyTokenRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyTokenRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *VerifyTokenRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VerifyTokenRes) GetLivekitHost() string {
	if x != nil && x.LivekitHost != nil {
		return *x.LivekitHost
	}
	return ""
}

func (x *VerifyTokenRes) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *VerifyTokenRes) GetServerVersion() string {
	if x != nil && x.ServerVersion != nil {
		return *x.ServerVersion
	}
	return ""
}

func (x *VerifyTokenRes) GetEnabledE2Ee() bool {
	if x != nil {
		return x.EnabledE2Ee
	}
	return false
}

type MuteUnMuteTrackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid             string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RoomId          string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId          string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrackSid        string `protobuf:"bytes,4,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	Muted           bool   `protobuf:"varint,5,opt,name=muted,proto3" json:"muted,omitempty"`
	RequestedUserId string `protobuf:"bytes,6,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
}

func (x *MuteUnMuteTrackReq) Reset() {
	*x = MuteUnMuteTrackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteUnMuteTrackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUnMuteTrackReq) ProtoMessage() {}

func (x *MuteUnMuteTrackReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUnMuteTrackReq.ProtoReflect.Descriptor instead.
func (*MuteUnMuteTrackReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{3}
}

func (x *MuteUnMuteTrackReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetTrackSid() string {
	if x != nil {
		return x.TrackSid
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

func (x *MuteUnMuteTrackReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

type RemoveParticipantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid       string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RoomId    string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Msg       string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	BlockUser bool   `protobuf:"varint,5,opt,name=block_user,json=blockUser,proto3" json:"block_user,omitempty"`
}

func (x *RemoveParticipantReq) Reset() {
	*x = RemoveParticipantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveParticipantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveParticipantReq) ProtoMessage() {}

func (x *RemoveParticipantReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveParticipantReq.ProtoReflect.Descriptor instead.
func (*RemoveParticipantReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveParticipantReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *RemoveParticipantReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RemoveParticipantReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveParticipantReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RemoveParticipantReq) GetBlockUser() bool {
	if x != nil {
		return x.BlockUser
	}
	return false
}

type DataMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId          string          `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomSid         string          `protobuf:"bytes,2,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	UserId          string          `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserSid         string          `protobuf:"bytes,4,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	MsgBodyType     DataMsgBodyType `protobuf:"varint,5,opt,name=msg_body_type,json=msgBodyType,proto3,enum=plugnmeet.DataMsgBodyType" json:"msg_body_type,omitempty"`
	Msg             string          `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestedUserId string          `protobuf:"bytes,7,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
	SendTo          []string        `protobuf:"bytes,8,rep,name=send_to,json=sendTo,proto3" json:"send_to,omitempty"`
	IsAdmin         bool            `protobuf:"varint,9,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *DataMessageReq) Reset() {
	*x = DataMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMessageReq) ProtoMessage() {}

func (x *DataMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMessageReq.ProtoReflect.Descriptor instead.
func (*DataMessageReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{5}
}

func (x *DataMessageReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *DataMessageReq) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *DataMessageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DataMessageReq) GetUserSid() string {
	if x != nil {
		return x.UserSid
	}
	return ""
}

func (x *DataMessageReq) GetMsgBodyType() DataMsgBodyType {
	if x != nil {
		return x.MsgBodyType
	}
	return DataMsgBodyType_RAISE_HAND
}

func (x *DataMessageReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DataMessageReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

func (x *DataMessageReq) GetSendTo() []string {
	if x != nil {
		return x.SendTo
	}
	return nil
}

func (x *DataMessageReq) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type RoomEndAPIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *RoomEndAPIReq) Reset() {
	*x = RoomEndAPIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEndAPIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEndAPIReq) ProtoMessage() {}

func (x *RoomEndAPIReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEndAPIReq.ProtoReflect.Descriptor instead.
func (*RoomEndAPIReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{6}
}

func (x *RoomEndAPIReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type ChangeVisibilityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId            string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	VisibleNotepad    *bool  `protobuf:"varint,2,opt,name=visible_notepad,json=visibleNotepad,proto3,oneof" json:"visible_notepad,omitempty"`
	VisibleWhiteBoard *bool  `protobuf:"varint,3,opt,name=visible_white_board,json=visibleWhiteBoard,proto3,oneof" json:"visible_white_board,omitempty"`
}

func (x *ChangeVisibilityRes) Reset() {
	*x = ChangeVisibilityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeVisibilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeVisibilityRes) ProtoMessage() {}

func (x *ChangeVisibilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeVisibilityRes.ProtoReflect.Descriptor instead.
func (*ChangeVisibilityRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeVisibilityRes) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChangeVisibilityRes) GetVisibleNotepad() bool {
	if x != nil && x.VisibleNotepad != nil {
		return *x.VisibleNotepad
	}
	return false
}

func (x *ChangeVisibilityRes) GetVisibleWhiteBoard() bool {
	if x != nil && x.VisibleWhiteBoard != nil {
		return *x.VisibleWhiteBoard
	}
	return false
}

type SwitchPresenterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task            SwitchPresenterTask `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.SwitchPresenterTask" json:"task,omitempty"`
	UserId          string              `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomId          string              `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RequestedUserId string              `protobuf:"bytes,4,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
}

func (x *SwitchPresenterReq) Reset() {
	*x = SwitchPresenterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchPresenterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchPresenterReq) ProtoMessage() {}

func (x *SwitchPresenterReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchPresenterReq.ProtoReflect.Descriptor instead.
func (*SwitchPresenterReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{8}
}

func (x *SwitchPresenterReq) GetTask() SwitchPresenterTask {
	if x != nil {
		return x.Task
	}
	return SwitchPresenterTask_PROMOTE
}

func (x *SwitchPresenterReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SwitchPresenterReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SwitchPresenterReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

type ExternalMediaPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task   ExternalMediaPlayerTask `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.ExternalMediaPlayerTask" json:"task,omitempty"`
	Url    *string                 `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	SeekTo *float64                `protobuf:"fixed64,3,opt,name=seek_to,json=seekTo,proto3,oneof" json:"seek_to,omitempty"`
	RoomId string                  `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId string                  `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ExternalMediaPlayerReq) Reset() {
	*x = ExternalMediaPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalMediaPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalMediaPlayerReq) ProtoMessage() {}

func (x *ExternalMediaPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalMediaPlayerReq.ProtoReflect.Descriptor instead.
func (*ExternalMediaPlayerReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalMediaPlayerReq) GetTask() ExternalMediaPlayerTask {
	if x != nil {
		return x.Task
	}
	return ExternalMediaPlayerTask_START_PLAYBACK
}

func (x *ExternalMediaPlayerReq) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ExternalMediaPlayerReq) GetSeekTo() float64 {
	if x != nil && x.SeekTo != nil {
		return *x.SeekTo
	}
	return 0
}

func (x *ExternalMediaPlayerReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ExternalMediaPlayerReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExternalDisplayLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task   ExternalDisplayLinkTask `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.ExternalDisplayLinkTask" json:"task,omitempty"`
	Url    *string                 `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	RoomId string                  `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId string                  `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ExternalDisplayLinkReq) Reset() {
	*x = ExternalDisplayLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalDisplayLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalDisplayLinkReq) ProtoMessage() {}

func (x *ExternalDisplayLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalDisplayLinkReq.ProtoReflect.Descriptor instead.
func (*ExternalDisplayLinkReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{10}
}

func (x *ExternalDisplayLinkReq) GetTask() ExternalDisplayLinkTask {
	if x != nil {
		return x.Task
	}
	return ExternalDisplayLinkTask_START_EXTERNAL_LINK
}

func (x *ExternalDisplayLinkReq) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ExternalDisplayLinkReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ExternalDisplayLinkReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateEtherpadSessionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        bool    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	PadId         *string `protobuf:"bytes,3,opt,name=pad_id,json=padId,proto3,oneof" json:"pad_id,omitempty"`
	ReadonlyPadId *string `protobuf:"bytes,4,opt,name=readonly_pad_id,json=readonlyPadId,proto3,oneof" json:"readonly_pad_id,omitempty"`
}

func (x *CreateEtherpadSessionRes) Reset() {
	*x = CreateEtherpadSessionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEtherpadSessionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEtherpadSessionRes) ProtoMessage() {}

func (x *CreateEtherpadSessionRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEtherpadSessionRes.ProtoReflect.Descriptor instead.
func (*CreateEtherpadSessionRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateEtherpadSessionRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateEtherpadSessionRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateEtherpadSessionRes) GetPadId() string {
	if x != nil && x.PadId != nil {
		return *x.PadId
	}
	return ""
}

func (x *CreateEtherpadSessionRes) GetReadonlyPadId() string {
	if x != nil && x.ReadonlyPadId != nil {
		return *x.ReadonlyPadId
	}
	return ""
}

type CleanEtherpadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PadId  string `protobuf:"bytes,3,opt,name=pad_id,json=padId,proto3" json:"pad_id,omitempty"`
}

func (x *CleanEtherpadReq) Reset() {
	*x = CleanEtherpadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanEtherpadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanEtherpadReq) ProtoMessage() {}

func (x *CleanEtherpadReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanEtherpadReq.ProtoReflect.Descriptor instead.
func (*CleanEtherpadReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{12}
}

func (x *CleanEtherpadReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CleanEtherpadReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CleanEtherpadReq) GetPadId() string {
	if x != nil {
		return x.PadId
	}
	return ""
}

type ChangeEtherpadStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsActive bool   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *ChangeEtherpadStatusReq) Reset() {
	*x = ChangeEtherpadStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeEtherpadStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEtherpadStatusReq) ProtoMessage() {}

func (x *ChangeEtherpadStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEtherpadStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeEtherpadStatusReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{13}
}

func (x *ChangeEtherpadStatusReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChangeEtherpadStatusReq) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type ApproveWaitingUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ApproveWaitingUsersReq) Reset() {
	*x = ApproveWaitingUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveWaitingUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveWaitingUsersReq) ProtoMessage() {}

func (x *ApproveWaitingUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveWaitingUsersReq.ProtoReflect.Descriptor instead.
func (*ApproveWaitingUsersReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{14}
}

func (x *ApproveWaitingUsersReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ApproveWaitingUsersReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateWaitingRoomMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateWaitingRoomMessageReq) Reset() {
	*x = UpdateWaitingRoomMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWaitingRoomMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaitingRoomMessageReq) ProtoMessage() {}

func (x *UpdateWaitingRoomMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaitingRoomMessageReq.ProtoReflect.Descriptor instead.
func (*UpdateWaitingRoomMessageReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateWaitingRoomMessageReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateWaitingRoomMessageReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateUserLockSettingsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomSid         string `protobuf:"bytes,1,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	RoomId          string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId          string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Service         string `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Direction       string `protobuf:"bytes,5,opt,name=direction,proto3" json:"direction,omitempty"`
	RequestedUserId string `protobuf:"bytes,6,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
}

func (x *UpdateUserLockSettingsReq) Reset() {
	*x = UpdateUserLockSettingsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugnmeet_common_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLockSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLockSettingsReq) ProtoMessage() {}

func (x *UpdateUserLockSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLockSettingsReq.ProtoReflect.Descriptor instead.
func (*UpdateUserLockSettingsReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserLockSettingsReq) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

var File_plugnmeet_common_api_proto protoreflect.FileDescriptor

var file_plugnmeet_common_api_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x6c,
	0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x1a, 0x1b, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65,
	0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x4c, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfa,
	0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x0c, 0x6c,
	0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x65, 0x32, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x45, 0x32, 0x65, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x12,
	0x4d, 0x75, 0x74, 0x65, 0x55, 0x6e, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x53, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x22, 0xaa, 0x02, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x64, 0x12, 0x3e,
	0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2a, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x22, 0x28, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x6e, 0x64, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x70, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x70, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x70,
	0x61, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x36,
	0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x65, 0x65, 0x6b, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x74,
	0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x70, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x06,
	0x70, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x70, 0x61, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x61, 0x64,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x70, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x64, 0x49,
	0x64, 0x22, 0x4f, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x70, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x48,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xcc, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x2e, 0x0a, 0x13, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x01, 0x2a, 0x3f, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4e, 0x44, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x2a, 0x4a, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x45, 0x58, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x4f, 0x50, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x49,
	0x4e, 0x4b, 0x10, 0x01, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x79, 0x6e, 0x61, 0x70, 0x61, 0x72, 0x72, 0x6f, 0x74, 0x2f, 0x70, 0x6c,
	0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x6e, 0x6d, 0x65, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_plugnmeet_common_api_proto_rawDescOnce sync.Once
	file_plugnmeet_common_api_proto_rawDescData = file_plugnmeet_common_api_proto_rawDesc
)

func file_plugnmeet_common_api_proto_rawDescGZIP() []byte {
	file_plugnmeet_common_api_proto_rawDescOnce.Do(func() {
		file_plugnmeet_common_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugnmeet_common_api_proto_rawDescData)
	})
	return file_plugnmeet_common_api_proto_rawDescData
}

var file_plugnmeet_common_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_plugnmeet_common_api_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_plugnmeet_common_api_proto_goTypes = []interface{}{
	(SwitchPresenterTask)(0),            // 0: plugnmeet.SwitchPresenterTask
	(ExternalMediaPlayerTask)(0),        // 1: plugnmeet.ExternalMediaPlayerTask
	(ExternalDisplayLinkTask)(0),        // 2: plugnmeet.ExternalDisplayLinkTask
	(*CommonResponse)(nil),              // 3: plugnmeet.CommonResponse
	(*VerifyTokenReq)(nil),              // 4: plugnmeet.VerifyTokenReq
	(*VerifyTokenRes)(nil),              // 5: plugnmeet.VerifyTokenRes
	(*MuteUnMuteTrackReq)(nil),          // 6: plugnmeet.MuteUnMuteTrackReq
	(*RemoveParticipantReq)(nil),        // 7: plugnmeet.RemoveParticipantReq
	(*DataMessageReq)(nil),              // 8: plugnmeet.DataMessageReq
	(*RoomEndAPIReq)(nil),               // 9: plugnmeet.RoomEndAPIReq
	(*ChangeVisibilityRes)(nil),         // 10: plugnmeet.ChangeVisibilityRes
	(*SwitchPresenterReq)(nil),          // 11: plugnmeet.SwitchPresenterReq
	(*ExternalMediaPlayerReq)(nil),      // 12: plugnmeet.ExternalMediaPlayerReq
	(*ExternalDisplayLinkReq)(nil),      // 13: plugnmeet.ExternalDisplayLinkReq
	(*CreateEtherpadSessionRes)(nil),    // 14: plugnmeet.CreateEtherpadSessionRes
	(*CleanEtherpadReq)(nil),            // 15: plugnmeet.CleanEtherpadReq
	(*ChangeEtherpadStatusReq)(nil),     // 16: plugnmeet.ChangeEtherpadStatusReq
	(*ApproveWaitingUsersReq)(nil),      // 17: plugnmeet.ApproveWaitingUsersReq
	(*UpdateWaitingRoomMessageReq)(nil), // 18: plugnmeet.UpdateWaitingRoomMessageReq
	(*UpdateUserLockSettingsReq)(nil),   // 19: plugnmeet.UpdateUserLockSettingsReq
	(DataMsgBodyType)(0),                // 20: plugnmeet.DataMsgBodyType
}
var file_plugnmeet_common_api_proto_depIdxs = []int32{
	20, // 0: plugnmeet.DataMessageReq.msg_body_type:type_name -> plugnmeet.DataMsgBodyType
	0,  // 1: plugnmeet.SwitchPresenterReq.task:type_name -> plugnmeet.SwitchPresenterTask
	1,  // 2: plugnmeet.ExternalMediaPlayerReq.task:type_name -> plugnmeet.ExternalMediaPlayerTask
	2,  // 3: plugnmeet.ExternalDisplayLinkReq.task:type_name -> plugnmeet.ExternalDisplayLinkTask
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_plugnmeet_common_api_proto_init() }
func file_plugnmeet_common_api_proto_init() {
	if File_plugnmeet_common_api_proto != nil {
		return
	}
	file_plugnmeet_datamessage_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_plugnmeet_common_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteUnMuteTrackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveParticipantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEndAPIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeVisibilityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchPresenterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalMediaPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalDisplayLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEtherpadSessionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanEtherpadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeEtherpadStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveWaitingUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWaitingRoomMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugnmeet_common_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserLockSettingsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugnmeet_common_api_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_plugnmeet_common_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_plugnmeet_common_api_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_plugnmeet_common_api_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_plugnmeet_common_api_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_plugnmeet_common_api_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugnmeet_common_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_common_api_proto_goTypes,
		DependencyIndexes: file_plugnmeet_common_api_proto_depIdxs,
		EnumInfos:         file_plugnmeet_common_api_proto_enumTypes,
		MessageInfos:      file_plugnmeet_common_api_proto_msgTypes,
	}.Build()
	File_plugnmeet_common_api_proto = out.File
	file_plugnmeet_common_api_proto_rawDesc = nil
	file_plugnmeet_common_api_proto_goTypes = nil
	file_plugnmeet_common_api_proto_depIdxs = nil
}
